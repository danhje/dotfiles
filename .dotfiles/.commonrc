export PATH=~/.local/bin:~/.poetry/bin:$PATH
export MCFLY_RESULTS=50
export MCFLY_FUZZY=true

# Meta
alias updot="source <(curl -fsSL https://raw.githubusercontent.com/danhje/dotfiles/main/install.sh)"

# cd
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../'
alias .......='cd ../../../../'
alias .2='cd ../../../../'
alias .3='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'
alias .6='cd ../../../../..'
alias .7='cd ../../../../..'

# git
alias ga="git add"
alias gd="git diff"
alias gds="git diff --staged"
alias gb="git branch -a"
alias gch="git checkout"
alias gs="git status"
alias gc="git commit"
alias gl="git log"
alias glo="git log --oneline --graph"
alias gp="git push"
alias gamend="git commit --amend --no-edit"
alias gforce="git push --force-with-lease"

# poetry
alias poetry-upgrade="deps=$(poetry show -t --no-dev | grep '^[[:blank:]]*[^[:blank:]|`]' | cut -d ' ' -f 1 | sed ':b;N;$!bb;s/\n/ /g') && poetry remove $deps && poetry add $deps"  # Currently fails due to https://github.com/python-poetry/poetry/issues/4204
alias poetry-rebuild="poetry env remove `poetry env list | awk '{print $1;}'` && poetry install"
alias pru="poetry run"
alias psh="poetry shell"
alias pad="poetry add"

# other
alias init="git init && pre-commit install && poetry install && poetry shell"
alias pre="pre-commit install && pre-commit run --all-files"
alias re-source='. ~/.zshrc 2>/dev/null ; . ~/.bashrc 2>/dev/null'
alias p='sb pycharm nosplash .'
alias lk="exa -lhar -s modified"
alias c="clear"
alias grep="grep --color=auto"
alias t="poetry run pytest"
alias listfunc="compgen -A function | grep \"^[^_]\""


function crush () {
    # Kill process listening on specified port (default = 8000)
    port = $*
    if [ -z "$port" ]; then
        port = 8000
    fi
    kill $(lsof -i tcp:$port | awk 'NR==2 {print $2}')
}


function trash() {
    # Move file or folder to ~/.trash. If already present, append .~<i>~
    [ ! -d ~/.trash ] && mkdir ~/.trash
    mv $* ~/.trash --backup=numbered
}


function sr() {
    # Set remote to trach current branch.
    if [ $(git remote | wc -l) -ne 1 ]; then
        return
    fi
    branch=$(git branch --show-current)
    remote=$(git remote)
    git branch --set-upstream-to=$remote/$branch $branch
}


function wg() {
    # wget and pipe to jq for nice json formatting.
    rest=$*
    if [ -z "$rest" ]; then
        rest="8000/data"
    fi
    wget -qO- http://0.0.0.0:$rest | jq
}


function sb() {
    # Starts a process in the background, suppressing any stdout / stderr output.
    $* >/dev/null 2>&1 &
}

# Source local rc. Should remain at the bottom.
if [ -f ~/.localrc ]; then
    . ~/.localrc
fi
